{"version":3,"file":"main.0889685701188062d84a.hot-update.js","sources":["webpack:///./src/components/App/App.tsx","webpack:///./src/components/App/index.ts","webpack:///./src/layout.tsx"],"sourcesContent":["import * as React from 'react';\r\nimport { LayoutProps } from 'piral-core';\r\nimport { Menu, Notifications } from 'piral';\r\n\r\nconst App: React.FC<LayoutProps> = ({ children }) => (\r\n  <div>\r\n    <Notifications />\r\n    <Menu type=\"general\" />\r\n    <div className=\"container\">{children}</div>\r\n  </div>\r\n);\r\n\r\nexport default App;\r\n","import App from './App';\r\n\r\nexport default App;","import * as React from 'react';\nimport {\n  ComponentsState,\n  ErrorComponentsState,\n  SwitchErrorInfo,\n  MenuItemProps,\n  useGlobalState,\n  useAction,\n} from 'piral';\nimport { Link } from 'react-router-dom';\nimport App from './components/App';\n\nconst MenuItem: React.FC<MenuItemProps> = ({ children }) => (\n  <li className=\"nav-item\">{children}</li>\n);\n\nconst defaultTiles = (\n  <>\n    {/* <div className=\"tile rows-2 cols-2\">\n      <div className=\"teaser\">\n        <a href=\"https://piral.io/\">Piral</a>\n        <br />\n        for next generation portals\n      </div>\n    </div>\n    <div className=\"tile rows-2 cols-2\">\n      <div className=\"teaser\">\n        <a href=\"https://www.typescriptlang.org/\">TypeScript</a>\n        <br />\n        for writing scalable web apps\n      </div>\n    </div>\n    <div className=\"tile rows-2 cols-2\">\n      <div className=\"teaser\">\n        <a href=\"https://reactjs.org/\">React</a>\n        <br />\n        for building components\n      </div>\n    </div>\n    <div className=\"tile rows-2 cols-2\">\n      <div className=\"teaser\">\n        <a href=\"http://getbootstrap.com/\">Bootstrap</a>\n        <br />\n        for layout and styling\n      </div>\n    </div>\n    <div className=\"tile rows-2 cols-2\">\n      <div className=\"teaser\">\n        <a href=\"https://sass-lang.com\">Sass</a>\n        <br />\n        for crafting custom styles\n      </div>\n    </div> */}\n  </>\n);\n\nconst defaultMenuItems = (\n  <>\n    <MenuItem type=\"general\" meta={{}}>\n      <Link className=\"nav-link text-dark\" to=\"/not-found\">\n        Not Found\n      </Link>\n    </MenuItem>\n  </>\n);\n\nexport const errors: Partial<ErrorComponentsState> = {\n  not_found: () => (\n    <div>\n      <p className=\"error\">\n        Could not find the requested page. Are you sure it exists?\n      </p>\n      <p>\n        Go back <Link to=\"/\">to the dashboard</Link>.\n      </p>\n    </div>\n  ),\n};\n\nexport const layout: Partial<ComponentsState> = {\n  ErrorInfo: (props) => (\n    <div>\n      <h1>Error</h1>\n      <SwitchErrorInfo {...props} />\n    </div>\n  ),\n  DashboardContainer: ({ children }) => {\n    const mainVar = useGlobalState((m) => m.mainVar);\n\n    const mainVarHandler = useAction('dispatchMainVar');\n\n    return (\n      <div>\n        The gloabl value (mainVar) is {mainVar}\n        <button onClick={mainVarHandler as any}>+</button>\n        <div className=\"tiles\">\n          {defaultTiles}\n          {children}\n        </div>\n      </div>\n    );\n  },\n  DashboardTile: ({ columns, rows, children }) => (\n    <div className={`tile cols-${columns} rows-${rows}`}>{children}</div>\n  ),\n  Layout: App,\n  MenuContainer: ({ children }) => {\n    const [collapsed, setCollapsed] = React.useState(true);\n    return (\n      <header>\n        <nav className=\"navbar navbar-light navbar-expand-sm navbar-toggleable-sm ng-white border-bottom box-shadow mb-3\">\n          <div className=\"container\">\n            <Link className=\"navbar-brand\" to=\"/\">\n              Piral\n            </Link>\n            <button\n              aria-label=\"Toggle navigation\"\n              type=\"button\"\n              onClick={() => setCollapsed(!collapsed)}\n              className=\"navbar-toggler mr-2\"\n            >\n              <span className=\"navbar-toggler-icon\" />\n            </button>\n            <div\n              className={`collapse navbar-collapse d-sm-inline-flex flex-sm-row-reverse ${\n                collapsed ? '' : 'show'\n              }`}\n              aria-expanded={!collapsed}\n            >\n              <ul className=\"navbar-nav flex-grow\">\n                {children}\n                {defaultMenuItems}\n              </ul>\n            </div>\n          </div>\n        </nav>\n      </header>\n    );\n  },\n  MenuItem,\n  NotificationsHost: ({ children }) => (\n    <div className=\"notifications\">{children}</div>\n  ),\n  NotificationsToast: ({ options, onClose, children }) => (\n    <div className={`notification-toast ${options.type}`}>\n      <div className=\"notification-toast-details\">\n        {options.title && (\n          <div className=\"notification-toast-title\">{options.title}</div>\n        )}\n        <div className=\"notification-toast-description\">{children}</div>\n      </div>\n      <div className=\"notification-toast-close\" onClick={onClose} />\n    </div>\n  ),\n};\n"],"mappings":";;;;;;;;;;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AACA;AACA;AAAA;AAAA;AAGA;AAAA;AACA;AAAA;AAJA;AACA;AAOA;;;;;;;;;;;;ACZA;AAAA;AAAA;AAEA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACFA;AACA;AAQA;AACA;AACA;AACA;AAAA;AAAA;AACA;AAAA;AADA;AACA;AAGA;AAwCA;AAEA;AAAA;AAAA;AACA;AAAA;AAAA;AAOA;AACA;AAAA;AAEA;AAAA;AAIA;AAAA;AANA;AADA;AAaA;AACA;AAAA;AAAA;AAMA;AAAA;AACA;AAAA;AAAA;AAEA;AAEA;AAGA;AAAA;AACA;AAAA;AAMA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AADA;AAGA;AACA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAEA;AAAA;AACA;AAAA;AACA;AAAA;AAAA;AAGA;AAEA;AACA;AAAA;AAAA;AACA;AAJA;AAMA;AAAA;AAGA;AAEA;AAHA;AAMA;AAAA;AASA;AACA;AACA;AAAA;AAAA;AACA;AAAA;AADA;AAGA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AACA;AAAA;AAEA;AAAA;AAEA;AAAA;AAEA;AAAA;AAAA;AARA;AAhEA;;;;A","sourceRoot":""}