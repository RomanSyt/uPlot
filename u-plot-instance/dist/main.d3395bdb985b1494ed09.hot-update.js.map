{"version":3,"file":"main.d3395bdb985b1494ed09.hot-update.js","sources":["webpack:///./src/components/Navigation/Navigation.tsx","webpack:///./src/components/Navigation/index.ts","webpack:///./src/layout.tsx"],"sourcesContent":["import * as React from 'react';\r\nimport { MenuItemProps, MenuContainerProps } from 'piral';\r\nimport { Link } from 'react-router-dom';\r\n\r\nexport const MenuItem: React.FC<MenuItemProps> = ({ children }) => (\r\n  <li className=\"nav-item\">{children}</li>\r\n);\r\n\r\nconst defaultMenuItems = (\r\n  <>\r\n    <MenuItem type=\"general\" meta={{}}>\r\n      <Link className=\"nav-link text-dark\" to=\"/not-found\">\r\n        Not Found\r\n      </Link>\r\n    </MenuItem>\r\n  </>\r\n);\r\n\r\nconst Navigation: React.FC<MenuContainerProps> =({ children }) => {\r\n  const [collapsed, setCollapsed] = React.useState(true);\r\n  return (\r\n    <header>\r\n      <nav className=\"navbar navbar-light navbar-expand-sm navbar-toggleable-sm ng-white border-bottom box-shadow mb-3\">\r\n        <div className=\"container\">\r\n          <Link className=\"navbar-brand\" to=\"/\">\r\n            Piral\r\n          </Link>\r\n          <button\r\n            aria-label=\"Toggle navigation\"\r\n            type=\"button\"\r\n            onClick={() => setCollapsed(!collapsed)}\r\n            className=\"navbar-toggler mr-2\"\r\n          >\r\n            <span className=\"navbar-toggler-icon\" />\r\n          </button>\r\n          <div\r\n            className={`collapse navbar-collapse d-sm-inline-flex flex-sm-row-reverse ${\r\n              collapsed ? '' : 'show'\r\n            }`}\r\n            aria-expanded={!collapsed}\r\n          >\r\n            <ul className=\"navbar-nav flex-grow\">\r\n              {children}\r\n              {defaultMenuItems}\r\n            </ul>\r\n          </div>\r\n        </div>\r\n      </nav>\r\n    </header>\r\n  );\r\n}\r\n\r\nexport default Navigation;","import Navigation, { MenuItem } from './Navigation';\r\n\r\nexport { MenuItem };\r\nexport default Navigation;","import * as React from 'react';\nimport {\n  ComponentsState,\n  ErrorComponentsState,\n  SwitchErrorInfo,\n  useGlobalState,\n  useAction,\n} from 'piral';\nimport { Link } from 'react-router-dom';\nimport App from './components/App';\nimport Navigation, { MenuItem }  from './components/Navigation';\n\nconst defaultTiles = (\n  <>\n    {/* <div className=\"tile rows-2 cols-2\">\n      <div className=\"teaser\">\n        <a href=\"https://piral.io/\">Piral</a>\n        <br />\n        for next generation portals\n      </div>\n    </div>\n    <div className=\"tile rows-2 cols-2\">\n      <div className=\"teaser\">\n        <a href=\"https://www.typescriptlang.org/\">TypeScript</a>\n        <br />\n        for writing scalable web apps\n      </div>\n    </div>\n    <div className=\"tile rows-2 cols-2\">\n      <div className=\"teaser\">\n        <a href=\"https://reactjs.org/\">React</a>\n        <br />\n        for building components\n      </div>\n    </div>\n    <div className=\"tile rows-2 cols-2\">\n      <div className=\"teaser\">\n        <a href=\"http://getbootstrap.com/\">Bootstrap</a>\n        <br />\n        for layout and styling\n      </div>\n    </div>\n    <div className=\"tile rows-2 cols-2\">\n      <div className=\"teaser\">\n        <a href=\"https://sass-lang.com\">Sass</a>\n        <br />\n        for crafting custom styles\n      </div>\n    </div> */}\n  </>\n);\n\nexport const errors: Partial<ErrorComponentsState> = {\n  not_found: () => (\n    <div>\n      <p className=\"error\">\n        Could not find the requested page. Are you sure it exists?\n      </p>\n      <p>\n        Go back <Link to=\"/\">to the dashboard</Link>.\n      </p>\n    </div>\n  ),\n};\n\nexport const layout: Partial<ComponentsState> = {\n  ErrorInfo: (props) => (\n    <div>\n      <h1>Error</h1>\n      <SwitchErrorInfo {...props} />\n    </div>\n  ),\n  DashboardContainer: ({ children }) => {\n    const mainVar = useGlobalState((m) => m.mainVar);\n\n    const mainVarHandler = useAction('dispatchMainVar');\n\n    return (\n      <div>\n        The gloabl value (mainVar) is {mainVar}\n        <button onClick={mainVarHandler as any}>+</button>\n        <div className=\"tiles\">\n          {defaultTiles}\n          {children}\n        </div>\n      </div>\n    );\n  },\n  DashboardTile: ({ columns, rows, children }) => (\n    <div className={`tile cols-${columns} rows-${rows}`}>{children}</div>\n  ),\n  Layout: App,\n  MenuContainer: Navigation,\n  MenuItem,\n  NotificationsHost: ({ children }) => (\n    <div className=\"notifications\">{children}</div>\n  ),\n  NotificationsToast: ({ options, onClose, children }) => (\n    <div className={`notification-toast ${options.type}`}>\n      <div className=\"notification-toast-details\">\n        {options.title && (\n          <div className=\"notification-toast-title\">{options.title}</div>\n        )}\n        <div className=\"notification-toast-description\">{children}</div>\n      </div>\n      <div className=\"notification-toast-close\" onClick={onClose} />\n    </div>\n  ),\n};\n"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AAEA;AAEA;AAAA;AAAA;AACA;AAAA;AADA;AAIA;AAEA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAMA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAEA;AAAA;AACA;AAAA;AACA;AAAA;AAAA;AAGA;AAEA;AACA;AAAA;AAAA;AACA;AAJA;AAMA;AAAA;AAGA;AAEA;AAHA;AAMA;AAAA;AASA;AACA;AACA;;;;;;;;;;;;ACpDA;AAAA;AAAA;AAAA;AAAA;AAEA;AACA;;;;;;;;;;;;ACHA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAOA;AACA;AACA;AAEA;AAwCA;AACA;AAAA;AAEA;AAAA;AAIA;AAAA;AANA;AADA;AAaA;AACA;AAAA;AAAA;AAMA;AAAA;AACA;AAAA;AAAA;AAEA;AAEA;AAGA;AAAA;AACA;AAAA;AAMA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AADA;AAGA;AACA;AACA;AACA;AAAA;AAAA;AACA;AAAA;AADA;AAGA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AACA;AAAA;AAEA;AAAA;AAEA;AAAA;AAEA;AAAA;AAAA;AARA;AAhCA;;;;A","sourceRoot":""}